{
    "blog":[
        {
            "id": "1",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可视化布局模块开发分享</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在历经两年多的迭代后，Odeon大数据平台在底层能力建设上已经相当丰满。最近大半年来在数据可视化方面也投入了很大的精力，目前自助 BI 产品也已经成功上线并稳定运行了一段时间，今天小剧就来分享下我们在数据可视化中的一些经验。 今天的分享主要围绕 可视化布局模块 的一些工作，布局模块是承载可视化图表的一块画布，是用户用来组织业务逻辑的重要手段之一。先来体验下 在线demo 或者看下面的效果图：<br><br>其实不管是在数据可视化，还是在一些自助发布的运营平台，自助布局一直是一个难以跳过的问题。在项目开始之初这个问题也同样在困扰着我们，是我们开发几套预置模版让用户挑选，还是开发一套让用户可拖拽配置的布局模块？ 前者实现上非常简单，也很容易设计的非常精美，但是缺少了很多灵活性，很容易千篇一律。后者用户在使用上自由度非常高，可以拖拽出更符合自己预期的界面，但是开发成本相对较高，并且想要达到稳定、易用、高辅助性却比较难。 综合考虑上面的这些问题，我们对制定的几套方案均不满意，最终还是决定自己动手实现一个可以辅助用户进行拖拽布局的组件。&nbsp;&nbsp;<img src='https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538744367560&di=bc0b7f87cbb18e3e4cb31521f01497ca&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201512%2F14%2F20151214191914_2YE8z.jpeg'><br></p><p><br></p><h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可视化布局模块开发分享</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在历经两年多的迭代后，Odeon大数据平台在底层能力建设上已经相当丰满。最近大半年来在数据可视化方面也投入了很大的精力，目前自助 BI 产品也已经成功上线并稳定运行了一段时间，今天小剧就来分享下我们在数据可视化中的一些经验。 今天的分享主要围绕 可视化布局模块 的一些工作，布局模块是承载可视化图表的一块画布，是用户用来组织业务逻辑的重要手段之一。先来体验下 在线demo 或者看下面的效果图：<br><br>其实不管是在数据可视化，还是在一些自助发布的运营平台，自助布局一直是一个难以跳过的问题。在项目开始之初这个问题也同样在困扰着我们，是我们开发几套预置模版让用户挑选，还是开发一套让用户可拖拽配置的布局模块？ 前者实现上非常简单，也很容易设计的非常精美，但是缺少了很多灵活性，很容易千篇一律。后者用户在使用上自由度非常高，可以拖拽出更符合自己预期的界面，但是开发成本相对较高，并且想要达到稳定、易用、高辅助性却比较难。 综合考虑上面的这些问题，我们对制定的几套方案均不满意，最终还是决定自己动手实现一个可以辅助用户进行拖拽布局的组件。&nbsp;&nbsp;<img src='https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538744367560&di=bc0b7f87cbb18e3e4cb31521f01497ca&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201512%2F14%2F20151214191914_2YE8z.jpeg'><br></p><p><br></p><h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可视化布局模块开发分享</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在历经两年多的迭代后，Odeon大数据平台在底层能力建设上已经相当丰满。最近大半年来在数据可视化方面也投入了很大的精力，目前自助 BI 产品也已经成功上线并稳定运行了一段时间，今天小剧就来分享下我们在数据可视化中的一些经验。 今天的分享主要围绕 可视化布局模块 的一些工作，布局模块是承载可视化图表的一块画布，是用户用来组织业务逻辑的重要手段之一。先来体验下 在线demo 或者看下面的效果图：<br><br>其实不管是在数据可视化，还是在一些自助发布的运营平台，自助布局一直是一个难以跳过的问题。在项目开始之初这个问题也同样在困扰着我们，是我们开发几套预置模版让用户挑选，还是开发一套让用户可拖拽配置的布局模块？ 前者实现上非常简单，也很容易设计的非常精美，但是缺少了很多灵活性，很容易千篇一律。后者用户在使用上自由度非常高，可以拖拽出更符合自己预期的界面，但是开发成本相对较高，并且想要达到稳定、易用、高辅助性却比较难。 综合考虑上面的这些问题，我们对制定的几套方案均不满意，最终还是决定自己动手实现一个可以辅助用户进行拖拽布局的组件。&nbsp;&nbsp;<img src='https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538744367560&di=bc0b7f87cbb18e3e4cb31521f01497ca&imgtype=0&src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201512%2F14%2F20151214191914_2YE8z.jpeg'><br></p><p><br></p>",
            "date": {
                "year": 2018,
                "month": 10,
                "day": 5
            },
            "title": "可视化布局模块开发分享",
            "prev": "在历经两年多的迭代后，Odeon大数据平台在底层能力建设上已经相当丰满。最近大半年来在数据可视化方面也投入了很大的精力，目前自助 BI 产品也已经成功上线并稳定运行了一段时间，今天小剧就来分享下我们在数据可视化中的一些经验",
            "img":"https://goss3.vcg.com/creative/vcg/800/version23/VCG21gic9742570.jpg"
        },
        {
            "id": "2",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;记一次「随意」的照片赠送&nbsp;</h1><p>发布时间：2018-04-08最近闲着无聊，整理了自己觉得还算看得过去的照片，特意挑出五张印刷了二十套。假模假式的拆掉四套照片，模仿着大神的方式做了下签名。因为人在合肥，就委托远在上海的群主代为分发，没有明确的接收者名单，也没有对群主提任何要求。不知道在看这篇文章的你有没有收到其中的照片呢！<br>这篇文章的目的是对这五张照片做下简单的介绍，希望你能通过小剧的介绍了解照片背后的一些小故事。五张照片分别为一、杨浦五角场夜景iphone7拍摄五角场是小剧生活了五年的地方，这里承载了小剧在上海的全部回忆。<br>这幅照片拍摄于2017年五四青年节，同时也是我的一个特殊的纪念日，在五角场吃饭的时候无意间隔着玻璃发现外面的景色很不错，举起手机便拍下了这幅画面，得益于lightroom在iphone7上支持raw格式，后期处理起来很得心应手。二、杨浦大桥夜景大疆Mavic拍摄17年，在做好准备要离开上海时，四处去拍摄一些自己感兴趣的画面，某个傍晚骑单车去了下上海杭州路，靠近黄浦江杨浦大桥的一处老居民区，原本计划使用大疆Mavic拍摄一组夜景，无奈当晚风力过大，12组照片只有这一组的画面是清晰的。<br>三、崇明西沙湿地尼康D3000拍摄作为一个科三考了三遍的人来说，拿到驾照的心情自然是非常喜悦的。这次是自驾去崇明岛玩儿，正值秋冬交替的时节，可能也与树木的品种有关，东平森林公园和西沙湿地的树林都呈现红黄相映，临江的地方天空也特别干净多变，是一次蛮有收获的出行！&nbsp;&nbsp;</p><p><br></p>",
            "date": {
                "year": 2018,
                "month": 4,
                "day": 8
            },
            "title": "记一次「随意」的照片赠送",
            "prev": "最近闲着无聊，整理了自己觉得还算看得过去的照片，特意挑出五张印刷了二十套。假模假式的拆掉四套照片，模仿着大神的方式做了下签名。因为人在合肥，就委托远在上海的群主代为分发，没有明确的接收者名单，也没有对群主提任何要求。不知道在看这篇文章的你有没有收到其中的照片呢！",
            "img":"https://goss1.vcg.com/creative/vcg/800/version23/VCG21400792797.jpg"
        },
        {
            "id": "3",
            "content": "<h1><h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spanstyle='font-weight:normal;'>从零开始制作全景图&nbsp;</span></h1><p><spanstyle='font-weight:normal;'>发布时间：2017-01-082016年被称作VR产业元年，国内VR相关的创业项目也如雨后春笋般茁壮成长着。VR全景漫游作为整个VR中的领头军，在内容产出量上占据着比较大的比重。经过半个月摸索，小剧终于研究出如何拍摄、制作以及生成全景图，这里分享下这段时间研究的成果，供大家交流参考。制作全景图需要哪些步骤制作全景图其实很简单，只需要【前期拍摄】、【后期拼图】、【Web展示】这三步就够了，下面我来分别说一下在这三步分别要做哪些事情。一、前期拍摄前期拍摄很重要，因为全景照片需要的照片细节比较多，如果出现多张照片拍摄点不一致、或者照片素材不完整就就完蛋了，因为即使通过补拍也很难准确找到上次的拍摄点。另外因为天气的差异、时间的推移阳光也会发生变化从而影响画面的完整性。那么前期拍摄要注意哪些点呢？为了保证照片的完整融合需要定点拍摄，最好配合三脚架使用，可以使拍摄点更稳定。相邻画面要保证40%以上的重合点，有利于后期拼图时有更多可参考的像素细节。标准的拍摄流程是怎么样的？根据前面提到的定点拍摄和相邻画面40%的重合率，一般标准的全景拍摄方式为水平拍摄一圈、俯视45°拍摄一圈、仰视45°拍摄一圈，每圈平均拍摄8张，垂直向下俯视一张、垂直向上仰视一张，一共26张。当然，这里提到的仅仅是标准的全景图拍摄方式，有经验的话可以根据相机的不同可以适当的变通，初次拍摄推荐使用标准方法。</span></p></h1>",
            "date": {
                "year": 2018,
                "month": 10,
                "day": 5
            },
            "title": "从零开始制作全景图",
            "prev": "2016年被称作VR产业元年，VR全景漫游作为整个VR中的领头军，在内容产出量上占据着比较大的比重。经过半个月摸索，小剧终于研究出如何拍摄、制作以及生成全景图，这里分享下这段时间研究的成果，供大家交流参考。",
            "img":"https://goss1.vcg.com/creative/vcg/800/version23/VCG21gic13494761.jpg"
        },
        {
            "id": "4",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再见金华站&nbsp;</h1><p>发布时间：2012-10-16其实这段视频在我喜欢上它之前我是看过的，我们班的才子David力荐的一部原创视频。当时看了感觉很平常，过了半年之后又一次看了下，才发现我竟然漏掉了整部微电影的亮点——最后一句女主角的【喜欢】。说实话，我正是因为点睛的这一句话我才喜欢这部微电影的。不管是因为青春的悸动还是每个经历高中洗礼过的人的共鸣，生活化的表演总是让我有种身为剧中之人的感觉。再提下最后渲染气氛的那段音乐，也是我很喜欢的轻音乐其中一首《theoriginofsilence》。关于视频就不多说了，相信你看过之后必定有所体会！&nbsp;&nbsp;<br></p><p><br></p>",
            "date": {
                "year": 2018,
                "month": 10,
                "day": 5
            },
            "title": "再见金华站",
            "prev": "不管是因为青春的悸动还是每个经历高中洗礼过的人的共鸣，生活化的表演总是让我有种身为剧中之人的感觉。",
            "img":"https://goss1.vcg.com/creative/vcg/800/version23/VCG21gic13433547.jpg"
        },
        {
            "id": "5",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的自我销毁&nbsp;</h1><p>发布时间：2015-12-07最近在某乎上回答了一个问题JavaScript里如何实现自定义对象的ondestroy方法？，回答与题主期望有所偏差但勉强可以作为一点个人经验分享出来。在日常的JS组件开发中，往往会有一些较为复杂的DOM操作及事件监听，尤其是在处理UI层面的widgets时候更为明显。常常会花很多精力在对象的init上，而当组件需要被移除时则仅仅是把所在DOM草草的remove掉就算完事儿。当然，绝大多数情况这样处理并没有什么不妥，因为事件监听时仅仅局限于所属的DOM自身，移除DOM后，只要对象的外部引用不再维系，相关的内存占用很快就会被当作垃圾回收掉（暂不讨论低版本IE内存回收的BUG）。其实个人在构建组件（对象）的时候是比较习惯于添加自定义方法destroy，用来手动销毁对象内部的一些引用。也就是小剧今天要说的仅靠移除DOM并不能达到销毁对象的几种情况。当你的组件出现下面几种情况时需要特别注意。一：DOM事件监听越界常规情况下，一个组件需要监听的仅仅是自身的DOM内的事件。偶尔也会有另一种情况，对象不得不操作自身之外的DOM。拿常见的瀑布流组件为例，除了自身事件，还要监听页面的滚动、浏览器尺寸重置等事件。因此当瀑布流组件需要被移除时，简单的移除自身DOM并不能完整销毁组件对页面的影响。下面是常规做法的例子：&nbsp;&nbsp;<br></p>",
            "date": {
                "year": 2018,
                "month": 10,
                "day": 5
            },
            "title": "对象的自我销毁",
            "prev": "构建对象时添加自定义方法`destroy`，手动销毁对象内部的一些引用，用来弥补仅靠移除`DOM`并不能达到销毁对象的缺陷。",
            "img":"https://goss2.vcg.com/creative/vcg/800/version23/VCG21406647141.jpg"
        },
        {
            "id": "6",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL结构分析&nbsp;</h1><p>发布时间：2015-02-04小伙伴们可能很惊奇，小剧你个贰货为毛说URL这么简单的东西。其实还是有缘由的。一年半之前(2013年7月)小剧在写nodejs后端路由时，初次研究URL的结构，就感觉URL并没有想象中的简单；紧接着写前端路由lofox时，开始尝试拆分组合URL，发现浏览器处理URL的规则是如此简洁而丰富；最近（2015年一月）又在写基于传统页面的单页组件iframer时，对search、hash等URL的细枝末节做过不少处理的，深感URL是一个设计精妙的玩意儿。目前也算是和URL友好相gao处ji过相当长时间。URL由哪几部分组成？URL全称为统一资源定位器（UniformResoureLocator），其在b/s架构中起着桥梁作用。如上图标示，一个完整的URL主要由protocol、hostname、port、pathname、search、hash这六部分组成，下面小剧分别介绍这几个部分。protocol访问协议（也称之为方案）：它告诉浏览器如何处理将要打开的文件。web站点中最常用的模式是超文本传输协议http，其次为https协议。在URL中（http://xxx.xx/xx）协议的分隔符为//，匹配值包含:。hostname域名一般由英文字母和阿拉伯数字以及横'－'组成，最长可达67个字符（包括后缀），并且字母的大小写没有区别，每个层次最长不能超过22个字母。这些符号构成了域名的前缀，主体和后缀等几个部分，组合在一起构成一个完整的域名。当然，IP也可以充当domain的作用。port端口对应的是服务器当前应用正在监听的网络接口，浏览器默认值为80。分隔符为hostname后的:。&nbsp;&nbsp;<br></p><p><br></p>",
            "date": {
                "year": 2018,
                "month": 10,
                "day": 5
            },
            "title": "URL结构分析",
            "prev": "URL全称为统一资源定位器（Uniform Resoure Locator），其在b/s架构中起着桥梁作用。一个完整的URL主要由protocol、hostname、port、pathname、search 、hash这六部分组成。",
            "img":"https://goss1.vcg.com/creative/vcg/800/version23/VCG21gic16323618.jpg"
        },
        {
            "id": "7",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;移动手势的秘密&nbsp;</h1><p>发布时间：2015-12-25本文是由某次部门内部分享整理而来，算是阶段性的个人总结。希望对你有所帮助。提到手势一般都会想到见面打招呼，交警指挥交通。还有平日里电脑、手机、PAD上随处可见的手势。那先来看几个例子。浏览器自定义鼠标手势。Mac触摸盘手势手机滑动解锁科幻电影中的虚拟操作（原谅我的脑洞）不管手势有多少种呈现方式，其实最终都是在帮助用户完成人机交互的其中一个环节。简单来说手势是一种输入方式、可以起到简化界面元素、增加交互趣味性的作用。当然在人和人交流时也有人人交互的作用，虽然不知道有没有这个词。你要说的手势用在哪儿？PC常见的输入设备有：鼠标、键盘、摄像头、话筒这么几种。移动端引入了更为丰富有用的陀螺仪和触摸屏幕。今天小剧打算分享的就是大家每天都要用到的触摸手势。手势在移动设备上是当之无愧的使用频次最高的交互了。同样先来看几个例子。左滑删除&nbsp;&nbsp;<br></p>",
            "date": {
                "year": 2015,
                "month": 12,
                "day": 25
            },
            "title": "移动手势的秘密",
            "prev": "手势是帮助用户完成人机交互的其中一个环节，是一种高效的输入方式、可以起到简化界面元素、增加交互趣味性的作用。",
            "img":"https://goss3.vcg.com/creative/vcg/800/version23/VCG21gic13464152.jpg"
        },
        {
            "id": "8",
            "content": "<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一枚日历的成长史&nbsp;</h1><p>发布时间：2015-10-15WEB开发中，常常会涉及到对日期的选择操作，日历控件的使用尤为频繁，今天小剧就来扒一扒如何一步步实现一枚日历。在说实现之前，先来看一看WEB中常见的日历形态。1、携程酒店预订2、新浪微博定时发送3、途牛旅游线路预订1、携程、新浪的例子可以叫做选择类的日历，算是日历中最常见的形态了。设置个人生日的时候、12306选择车票出行时间、预订酒店等场景下都会用得到。这类日历相对简单，使用时弹出，不用时隐藏，既不占用页面空间又能简单快捷的完成日期选择的功能。2、途牛这个例子展示信息比较丰满，相对来说更个性化一点儿。这类日历更偏向于展示行程安排、重要时间点及节假日标记等。将日历作为一个容器直观的呈现日期上的内容，便于规划日程安排。准备工作开始啦啰嗦了这些，再来回到日历自身。一个日历精简之后骨架是什么呢，实现一枚日历所需要完成的最小部分是什么？很显然，是渲染一个完整的月份，即按星期显示一个月的每一天。开工，现在就来动手实现单个月份的渲染。这里有几个关键点需要解决，先一一列出来：一个星期的第一天是周几？这里先使用周日，当然完成之后，试试能不能通过动点手脚改成可配置的；如何获取某月第一天是星期几，因为这牵涉到从何处开始渲染每一天（当然第一点也有关系）；怎样获取某月的长度，即一个月有多少天好啦，现在其实就只有两点需要解决。如何获取某月第一天是星期几?其实这个相对来说比较简单，只要将日期设置为对应年、月份、日期为第一天即可。functiongetFirstDayInMonth(year,month){//创建一个Date对象vardate=newDate();//设置年份为输入年份date.setFullYear(year);//设置月份（输入月份为自然月，即一月为1，Date中的月份是以0开始）date.setMonth(month-1);//设置日期date.setDate(1);//返回Date对象是周几returndate.getDay();}当然，上面步骤过于繁琐，简单点儿即可改为下面。functiongetFirstDayInMonth(year,month){returnnewDate(year,month-1,1).getDay();}好了，现在只要告诉我年、月，我就可以马上告诉你这个月第一天是星期几啦。怎样获取某月日期的长度？&nbsp;&nbsp;<br></p>",
            "date": {
                "year": 2015,
                "month": 10,
                "day": 15
            },
            "title": "一枚日历的成长史",
            "prev": "WEB开发中，常常会涉及到对日期的选择操作，日历控件的使用尤为频繁，今天小剧就来扒一扒如何一步步实现一枚日历。",
            "img":"https://goss3.vcg.com/creative/vcg/800/version23/VCG21gic13423446.jpg"
        }
    ]
    
}